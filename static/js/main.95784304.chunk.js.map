{"version":3,"sources":["serviceWorker.js","contexts/firebase/firebaseContext.js","contexts/firebase/firebase.js","contexts/firebase/index.js","components/firebase/addCup.js","components/functions/dateParser.js","components/buttons/RadioButtons.js","components/statistics/Graph.js","contexts/statistics/coffeeDataContext.js","contexts/statistics/index.js","contexts/statistics/coffeeData.js","App.js","index.js","logo.svg"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","props","console","log","firebase","initializeApp","state","Component","AddCup","getDate","today","Date","String","padStart","getMonth","getFullYear","getTime","getHours","getMinutes","sendToDb","database","ref","push","set","newCoffee","type","time","date","JSON","stringify","defaultCoffee","then","res","displayAlert","show","message","variant","catch","err","Consumer","firebaseContainer","Button","onClick","period","RadioButtons","useState","radioValue","setRadioValue","ButtonGroup","toggle","name","value","map","radio","idx","ToggleButton","className","key","checked","onChange","e","currentTarget","simpleCalculating","Graph","data","setData","width","innerWidth","height","innerHeight","paddingW","dimensions","setDimensions","useEffect","addEventListener","dayjs","extend","require","timePeriod","rawData","length","lastSeen","hour","minute","timestamp","valueOf","nCups","parsedData","cDate","forEach","element","addEntry","dayOfYear","week","month","year","warn","x","y","diff","debug","parseToGraphData","Container","fluid","Row","xType","title","curve","Spinner","animation","CoffeeDataContext","CoffeeData","once","childNode","val","App","useContext","alert","setAlert","Alert","Col","Image","src","logo","alt","setTimeout","ReactDOM","render","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.95784304.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;","import firebase from 'firebase/app';\nimport 'firebase/auth'\nimport 'firebase/database'\nimport 'firebase/firestore'\nimport 'firebase/performance'\nimport {Component} from \"react\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\nclass Firebase extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"init Firebase\");\n    firebase.initializeApp(firebaseConfig);\n    this.state = {\n      firebase: firebase\n    };\n  };\n}\n\nexport default Firebase;","import FirebaseContext from './firebaseContext';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext };","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nimport { FirebaseContext } from '../../contexts/firebase';\n\n\nconst AddCup = (props) => {\n  const userID = 'userID';\n  // const [coffee, setCoffee, getCoffee] = useState({\n  //   type: 'fuck',\n  //   time: \"06:09\",\n  //   date: \"04/20/1969\"\n  // });\n\n  const getDate = () => {\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0');\n    let yyyy = today.getFullYear();\n    return dd + '/' + mm + '/' + yyyy;\n  };\n\n  const getTime = () => {\n    let today = new Date();\n    let th = String(today.getHours()).padStart(2, '0');\n    let tm = String(today.getMinutes()).padStart(2, '0');\n    return th + \":\" + tm;\n  };\n\n  const defaultCoffee = () => {\n    let newCoffee = {\n      type: 'black',\n      time: getTime(),\n      date: getDate()\n    };\n    console.log(\"coffee = \" + JSON.stringify(newCoffee, null, \" \"));\n    // setCoffee(newCoffee);\n    return newCoffee;\n  };\n\n  const sendToDb = (firebase) => {\n    console.log(\"trying to add the coffee\");\n\n    firebase.database().ref('Coffee/Users/' + userID + '/Entries')\n    .push()\n    .set(defaultCoffee())\n    .then(res => {\n      props.displayAlert({show: true, message: \"+1\", variant: 'success'})\n    }).catch(err => {\n      console.log(\"Could not add coffee to firebase:\\n\" + err);\n      props.displayAlert({show: true, message: \"Could not add coffee\", variant: 'danger'})\n    });\n  };\n\n  return (\n    <FirebaseContext.Consumer>\n      {firebaseContainer => (\n        // console.log(\"currentUser: \" + firebaseContainer.state.firebase.auth().currentUser);\n        <>\n          <Button variant=\"primary\" onClick={() => sendToDb(firebaseContainer.state.firebase)}>AddCup</Button>{' '}\n        </>\n      )}\n      \n    </FirebaseContext.Consumer>\n  );\n};\n\nexport default AddCup;","\nimport dayjs from 'dayjs';\n\nconst period = {\n    DAILY: 'daily',\n    WEEKLY: 'weekly',\n    MONTHLY: 'monthly',\n    YEARLY: 'yearly'\n}\n\nexport const parseToGraphData = (rawData, timePeriod=period.DAILY) => {\n    if (rawData.length === 0) {\n        return [];\n    }\n    let lastSeen = dayjs(rawData[0].date + \" \" + rawData[0].time, 'DD/MM/YYYY HH:mm').hour(0).minute(0); //first day\n    let timestamp = lastSeen.valueOf(); // milliseconds since the Unix Epoch\n    let nCups = 0;\n    let time = 0;\n    let parsedData = [];\n    let cDate = null; // current date\n    rawData.forEach(element => {\n      cDate = dayjs(element.date + \" \" + element.time, 'DD/MM/YYYY HH:mm');\n\n      // check if we should add the new element based on the selected time period\n      let addEntry = false;\n      switch (timePeriod) {\n        case period.DAILY: \n            if (cDate.dayOfYear() !== lastSeen.dayOfYear()) {\n                addEntry = true;\n            } break;\n        case period.WEEKLY: \n            if (cDate.week() !== lastSeen.week()) {\n                addEntry = true;\n            } break;\n        case period.MONTHLY: \n            if (cDate.month() !== lastSeen.month()) {\n                addEntry = true;\n            } break;\n        case period.YEARLY:\n            if (cDate.year() !== lastSeen.year()) {\n                addEntry = true;\n            } break;\n        default:\n            console.warn(\"Time period did not match with any available options\");\n      }\n\n      if (addEntry) {\n          addEntry = false;\n          parsedData.push({\n            x: timestamp + time,\n            y: nCups\n          });\n          nCups = 1;\n          time += cDate.diff(lastSeen, 'millisecond');\n      } else {\n          nCups++;\n      }\n      lastSeen = cDate; // remember last seen\n    });\n    // add last entry\n    time += cDate.diff(lastSeen, 'millisecond');\n    parsedData.push({\n      x: timestamp + time,\n      y: nCups\n    });\n    console.debug(parsedData)\n    return parsedData;\n};\n\n","import React, { useState } from 'react';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\n\nconst RadioButtons = (props) => {\n    const [radioValue, setRadioValue] = useState('daily');\n    \n    const callBackCalculating = (value) => {\n      setRadioValue(value);\n      props.simpleCalculating(value)\n    }\n    \n    const radios = [\n      { name: 'Day', value: 'daily' },\n      { name: 'Week', value: 'weekly' },\n      { name: 'Month', value: 'monthly' },\n      { name: 'Year', value: 'yearly' },\n    ];\n  \n    return (\n      <>\n        <ButtonGroup toggle>\n          {radios.map((radio, idx) => (\n            <ToggleButton\n              className=\"bg-secondary\"\n              key={idx}\n              type=\"radio\"\n              variant=\"secondary\"\n              name=\"radio\"\n              value={radio.value}\n              checked={radioValue === radio.value}\n              onChange={(e) => callBackCalculating(e.currentTarget.value)}\n            >\n              {radio.name}\n            </ToggleButton>\n          ))}\n        </ButtonGroup>\n      </>\n    );\n}\n\nexport default RadioButtons;","import React, { useEffect, useState } from 'react';\nimport \"../../../node_modules/react-vis/dist/style.css\";\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  HorizontalGridLines,\n  VerticalGridLines,\n  AreaSeries\n} from 'react-vis';\nimport dayjs from 'dayjs';\nimport { parseToGraphData } from '../functions/dateParser';\nimport RadioButtons from '../buttons/RadioButtons';\nimport { Container, Row, Spinner } from 'react-bootstrap';\n\nconst Graph = (props) => {\n  const [data, setData] = useState([]);\n  const [dimensions, setDimensions] = useState({ \n    width: window.innerWidth, \n    height: window.innerHeight, \n    paddingW: window.innerWidth/10\n  });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight,\n        paddingW: window.innerWidth/10\n      });\n    }\n    window.addEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    dayjs.extend(require('dayjs/plugin/customParseFormat'));\n    dayjs.extend(require('dayjs/plugin/dayOfYear'));\n    dayjs.extend(require('dayjs/plugin/weekOfYear'));\n    simpleCalculating();\n  }, [props.data]);\n\n  const simpleCalculating = (timePeriod) => {\n    console.log(\"calculating...\");\n    setData(parseToGraphData(props.data, timePeriod));\n  }\n\n  return (\n    <>\n      <Container fluid>\n      <Row className=\"justify-content-center\">\n        {\n        data.length !== 0 ?\n          <XYPlot xType=\"time\" width={dimensions.width-dimensions.paddingW} height={dimensions.height/4} >\n            <HorizontalGridLines className=\"grid\" />\n            <VerticalGridLines className=\"grid\" />\n            <XAxis title=\"date\" className=\"axis\" />\n            <YAxis title=\"cups\" className=\"axis\" />\n            <AreaSeries data={data} curve={'curveMonotoneX'} />\n          </XYPlot>\n        :\n          <Spinner animation=\"border\" variant=\"primary\"/>\n        }\n        </Row>\n        <Row className=\"justify-content-center\">\n          <RadioButtons simpleCalculating={simpleCalculating}/>\n        </Row>\n      </Container>\n    </>\n  );\n}\nexport default Graph;\n","import React from 'react';\n\nconst CoffeeDataContext = React.createContext({\n  data: {\n    type: \"default\",\n    time: \"06:09\",\n    date: \"04/20/1969\"\n  }\n});\n\nexport default CoffeeDataContext;","import CoffeeDataContext from './coffeeDataContext';\nimport CoffeeData from './coffeeData';\n\nexport default CoffeeData;\n\nexport { CoffeeDataContext };","const CoffeeData = (firebase) => {\n  const userID = 'userID';\n  let state = []\n\n    console.log(\"fetching all cups\");\n\n    return firebase.state.firebase.database().ref(\n        'Coffee/Users/' + userID + '/Entries').once('value').then( res => {\n      res.forEach((childNode) => {\n        state.push({\n          type: childNode.val().type,\n          date: childNode.val().date,\n          time: childNode.val().time\n        })\n      });\n      return state;\n    });\n};\n\nexport default CoffeeData;","import React, {useContext, useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\nimport AddCup from \"./components/firebase/addCup\";\nimport Graph from \"./components/statistics/Graph\";\nimport { CoffeeDataContext } from \"./contexts/statistics\";\nimport { Alert, Container, Row, Col, Image } from 'react-bootstrap';\n\nconst App = () => {\n  const context = useContext(CoffeeDataContext).then(res => setData(res));\n  const [data, setData] = useState([]);\n  const [alert, setAlert] = useState({show: false, message: \"N/A\", variant: 'success'});\n\n  useEffect(() => {\n  }, [alert]);\n\n  const displayAlert = (alert) => {\n    setAlert(alert);\n    window.setTimeout(() => {\n      setAlert({show: false})\n    }, 1000);\n  }\n  \n  return (\n    <Container fluid>\n      <Alert className=\"position-absolute fixed\" show={alert.show} variant={alert.variant} >{alert.message}</Alert>\n      <Row className=\"justify-content-center bg-primary\">\n        <Col className=\"my-auto\">\n          <Image src={logo} className=\"coffee-logo w-50\" alt=\"logo\" />\n        </Col>\n        <Col>\n          <h1 className=\"text-white\">Kaffi</h1>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-md-center bg-primary\">\n        \n      </Row>\n      <Row className=\"justify-content-center\">\n        <AddCup displayAlert={displayAlert}/>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <Graph data={data}/>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport Firebase, { FirebaseContext } from './contexts/firebase';\nimport CoffeeData, {CoffeeDataContext} from \"./contexts/statistics\";\n\nconst firebase = new Firebase();\n\nReactDOM.render(\n  <FirebaseContext.Provider value={firebase}>\n    <CoffeeDataContext.Provider value={CoffeeData(firebase)}>\n      <App />\n    </CoffeeDataContext.Provider>\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5a2ce697.svg\";"],"sourceRoot":""}